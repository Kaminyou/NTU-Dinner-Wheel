{"version":3,"sources":["components/manu.js","components/wheel.js","containers/main.js","App.js","reportWebVitals.js","index.js"],"names":["BasicMenu","restaurantListList","setListName","currentListName","theme","createTheme","palette","primary","main","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","set","e","ThemeProvider","Button","id","color","variant","onClick","event","currentTarget","style","textTransform","Menu","onClose","MenuListProps","map","MenuItem","WheelComponent","segments","segColors","winningSegment","onFinished","primaryColor","contrastColor","buttonText","isOnlyOnce","size","upDuration","downDuration","fontFamily","currentSegment","isStarted","isFinished","setFinished","timerHandle","timerDelay","length","angleCurrent","angleDelta","canvasContext","maxSpeed","Math","PI","upTime","downTime","spinStart","frames","centerX","centerY","useEffect","wheelInit","setTimeout","window","scrollTo","document","getElementById","removeEventListener","spin","initCanvas","wheelDraw","canvas","console","log","navigator","userAgent","indexOf","createElement","setAttribute","appendChild","addEventListener","getContext","Date","getTime","setInterval","onTimerTick","duration","progress","finished","sin","clearInterval","clear","drawWheel","drawNeedle","drawSegment","key","lastAngle","angle","ctx","value","save","beginPath","moveTo","arc","lineTo","closePath","fillStyle","fill","stroke","translate","rotate","font","fillText","substr","restore","len","PI2","lineWidth","strokeStyle","textBaseline","textAlign","i","fileStyle","change","floor","clearRect","width","height","pointerEvents","Wheel","loadFlag","setLoadFlag","listName","listNameList","setListNameList","restaurantData","setRestaurantData","candidateList","setCandidateList","colorPalette","setcolorPalette","defaultColorPalette","configData","COLOR_PALETTE","getCandidate","candidateTemp","Object","keys","forEach","element","push","repeats","ceil","array","Array","from","flat","repeatArray","axios","get","SPREADSHEET_ID","SHEET_NAME","then","res","data","catch","error","className","winner","UP_DURATION","DOWN_DURATION","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cab5bc8d.chunk.js","sourcesContent":["import { Button, createTheme, Menu, MenuItem, ThemeProvider } from '@material-ui/core';\nimport { useState } from \"react\";\n\n\nexport default function BasicMenu({ restaurantListList, setListName, currentListName }) {\n    \n\n    const theme = createTheme({\n        palette: {\n            primary: {\n                main: '#49513C',\n            },\n        },\n    });\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = (set, e) => {\n        setAnchorEl(null);\n        setListName(set);\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Button\n                id=\"basic-button\"\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={handleClick}\n                style={{textTransform: 'none'}}\n            >\n            {currentListName}\n            </Button>\n            <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                    'aria-labelledby': 'basic-button',\n                }}\n            >\n                {restaurantListList.map(function (set) {\n                    return <MenuItem onClick={(e) => handleClose(set, e)}>{set}</MenuItem>;\n                })}\n            </Menu>\n        </ThemeProvider>\n    );\n}","// revised from src: https://github.com/shekharramola/react-wheel-of-prizes\nimport React, { useEffect, useState } from 'react'\n\nconst WheelComponent = ({\n    segments,\n    segColors,\n    winningSegment,\n    onFinished,\n    primaryColor = 'black',\n    contrastColor = 'white',\n    buttonText = 'Spin',\n    isOnlyOnce = true,\n    size = 290,\n    upDuration = 100,\n    downDuration = 500,\n    fontFamily = 'proxima-nova'\n\t}) => {\n\tlet currentSegment = ''\n\tlet isStarted = false\n\tconst [isFinished, setFinished] = useState(false)\n\tlet timerHandle = 0\n\tlet timerDelay = segments.length\n\tlet angleCurrent = 0\n\tlet angleDelta = 0\n\tlet canvasContext = null\n\tlet maxSpeed = Math.PI / `${segments.length}`\n\tlet upTime = segments.length * upDuration\n\tlet downTime = segments.length * downDuration\n\tlet spinStart = 0\n\tlet frames = 0\n\tconst centerX = 300\n\tconst centerY = 300\n\t\n\tuseEffect(() => {\n\t\twheelInit()\n\t\tsetTimeout(() => {\n\t\twindow.scrollTo(0, 1)\n\t\t}, 0)\n\t\treturn () => {\n\t\t\tlet canvas = document.getElementById('canvas')\n\t\t\tcanvas.removeEventListener('click', spin);\n\t\t}\n\t}, [segments])\n\n\tconst resetParameter = () => {\n\t\tcurrentSegment = ''\n\t\tisStarted = false\n\t\tsetFinished(false)\n\t\ttimerHandle = 0\n\t\ttimerDelay = segments.length\n\t\tcanvasContext = null\n\t\tmaxSpeed = Math.PI / `${segments.length}`\n\t\tupTime = segments.length * upDuration\n\t\tdownTime = segments.length * downDuration\n\t\tspinStart = 0\n\t\tframes = 0\n\t}\n\tconst wheelInit = () => {\n\t\tresetParameter()\n\t\tinitCanvas()\n\t\twheelDraw()\n\t}\n\n\tconst initCanvas = () => {\n\t\tlet canvas = document.getElementById('canvas')\n\t\tconsole.log(navigator)\n\t\tif (navigator.userAgent.indexOf('MSIE') !== -1) {\n\t\t\tcanvas = document.createElement('canvas')\n\t\t\tcanvas.setAttribute('width', 1000)\n\t\t\tcanvas.setAttribute('height', 600)\n\t\t\tcanvas.setAttribute('id', 'canvas')\n\t\t\tdocument.getElementById('wheel').appendChild(canvas)\n\t\t}\n\t\tcanvas.addEventListener('click', spin, false)\n\t\tcanvasContext = canvas.getContext('2d')\n\t}\n\tconst spin = () => {\n\t\tisStarted = true\n\t\tif (timerHandle === 0) {\n\t\t\tspinStart = new Date().getTime()\n\t\t\t// maxSpeed = Math.PI / ((segments.length*2) + Math.random())\n\t\t\tmaxSpeed = Math.PI / segments.length\n\t\t\tframes = 0\n\t\t\ttimerHandle = setInterval(onTimerTick, timerDelay)\n\t\t}\n\t}\n\tconst onTimerTick = () => {\n\t\tframes++\n\t\twheelDraw()\n\t\tconst duration = new Date().getTime() - spinStart\n\t\tlet progress = 0\n\t\tlet finished = false\n\t\tif (duration < upTime) {\n\t\t\tprogress = duration / upTime\n\t\t\tangleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2)\n\t\t} else {\n\t\t\tif (winningSegment) {\n\t\t\t\tif (currentSegment === winningSegment && frames > segments.length) {\n\t\t\t\t\tprogress = duration / upTime\n\t\t\t\t\tangleDelta =\n\t\t\t\t\t\tmaxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2)\n\t\t\t\t\tprogress = 1\n\t\t\t\t} else {\n\t\t\t\t\tprogress = duration / downTime\n\t\t\t\t\tangleDelta =\n\t\t\t\t\t\tmaxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprogress = duration / downTime\n\t\t\t\tangleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2)\n\t\t\t}\n\t\t\tif (progress >= 1) finished = true\n\t\t}\n\n\t\tangleCurrent += angleDelta\n\t\twhile (angleCurrent >= Math.PI * 2) angleCurrent -= Math.PI * 2\n\t\tif (finished) {\n\t\tsetFinished(true)\n\t\tonFinished(currentSegment)\n\t\tclearInterval(timerHandle)\n\t\ttimerHandle = 0\n\t\tangleDelta = 0\n\t\t}\n\t}\n\n\tconst wheelDraw = () => {\n\t\tclear()\n\t\tdrawWheel()\n\t\tdrawNeedle()\n\t}\n\n\tconst drawSegment = (key, lastAngle, angle) => {\n\t\tconst ctx = canvasContext\n\t\tconst value = segments[key]\n\t\tctx.save()\n\t\tctx.beginPath()\n\t\tctx.moveTo(centerX, centerY)\n\t\tctx.arc(centerX, centerY, size, lastAngle, angle, false)\n\t\tctx.lineTo(centerX, centerY)\n\t\tctx.closePath()\n\t\tctx.fillStyle = segColors[key]\n\t\tctx.fill()\n\t\tctx.stroke()\n\t\tctx.save()\n\t\tctx.translate(centerX, centerY)\n\t\tctx.rotate((lastAngle + angle) / 2)\n\t\tctx.fillStyle = contrastColor\n\t\tctx.font = 'bold 1em ' + fontFamily\n\t\tctx.fillText(value.substr(0, 21), size / 2 + 20, 0)\n\t\tctx.restore()\n\t}\n\n\tconst drawWheel = () => {\n\t\tconst ctx = canvasContext\n\t\tlet lastAngle = angleCurrent\n\t\tconst len = segments.length\n\t\tconst PI2 = Math.PI * 2\n\t\tctx.lineWidth = 1\n\t\tctx.strokeStyle = primaryColor\n\t\tctx.textBaseline = 'middle'\n\t\tctx.textAlign = 'center'\n\t\tctx.font = '1em ' + fontFamily\n\t\tfor (let i = 1; i <= len; i++) {\n\t\t\tconst angle = PI2 * (i / len) + angleCurrent\n\t\t\tdrawSegment(i - 1, lastAngle, angle)\n\t\t\tlastAngle = angle\n\t\t}\n\n\t\t// Draw a center circle\n\t\tctx.beginPath()\n\t\tctx.arc(centerX, centerY, 50, 0, PI2, false)\n\t\tctx.closePath()\n\t\tctx.fillStyle = primaryColor\n\t\tctx.lineWidth = 10\n\t\tctx.strokeStyle = contrastColor\n\t\tctx.fill()\n\t\tctx.font = 'bold 1em ' + fontFamily\n\t\tctx.fillStyle = contrastColor\n\t\tctx.textAlign = 'center'\n\t\tctx.fillText(buttonText, centerX, centerY + 3)\n\t\tctx.stroke()\n\n\t\t// Draw outer circle\n\t\tctx.beginPath()\n\t\tctx.arc(centerX, centerY, size, 0, PI2, false)\n\t\tctx.closePath()\n\n\t\tctx.lineWidth = 10\n\t\tctx.strokeStyle = primaryColor\n\t\tctx.stroke()\n  \t}\n\n\tconst drawNeedle = () => {\n\t\tconst ctx = canvasContext\n\t\tctx.lineWidth = 1\n\t\tctx.strokeStyle = contrastColor\n\t\tctx.fileStyle = contrastColor\n\t\tctx.beginPath()\n\t\tctx.moveTo(centerX + 20, centerY - 50)\n\t\tctx.lineTo(centerX - 20, centerY - 50)\n\t\tctx.lineTo(centerX, centerY - 70)\n\t\tctx.closePath()\n\t\tctx.fill()\n\t\tconst change = angleCurrent + Math.PI / 2\n\t\tlet i =\n\t\tsegments.length -\n\t\tMath.floor((change / (Math.PI * 2)) * segments.length) -\n\t\t1\n\t\tif (i < 0) i = i + segments.length\n\t\tctx.textAlign = 'center'\n\t\tctx.textBaseline = 'middle'\n\t\tctx.fillStyle = primaryColor\n\t\tctx.font = 'bold 1.5em ' + fontFamily\n\t\tcurrentSegment = segments[i]\n\t\tisStarted && ctx.fillText(currentSegment, centerX + 10, centerY + size + 50)\n\t}\n\tconst clear = () => {\n\t\tconst ctx = canvasContext\n\t\tctx.clearRect(0, 0, 1000, 800)\n\t}\n\treturn (\n\t\t<div id='wheel'>\n\t\t<canvas\n\t\t\tid='canvas'\n\t\t\twidth='600'\n\t\t\theight='600'\n\t\t\tstyle={{\n\t\t\t\tpointerEvents: isFinished && isOnlyOnce ? 'none' : 'auto'\n\t\t\t}}\n\t\t/>\n\t\t</div>\n\t)\n}\nexport default WheelComponent","import axios from 'axios';\nimport React, { useEffect, useState } from \"react\";\nimport BasicMenu from '../components/manu';\nimport WheelComponent from '../components/wheel';\nimport configData from \"../config.json\";\n\nfunction Wheel() {\n    const [loadFlag, setLoadFlag] = useState(true);\n    const [listName, setListName] = useState(\"\");\n    const [listNameList, setListNameList] = useState([]);\n    const [restaurantData, setRestaurantData] = useState([]);\n    const [candidateList, setCandidateList] = useState([]);\n    const [colorPalette, setcolorPalette] = useState([]);\n\n    const defaultColorPalette = configData.COLOR_PALETTE\n\n    const repeatArray = (array, repeats) => {\n        return  Array.from({ length: repeats }, () => array).flat();\n    }\n\n    const getRestaurant = () => {\n        axios.get(`https://opensheet.vercel.app/${configData.SPREADSHEET_ID}/${configData.SHEET_NAME}`)\n        .then((res) => { \n            setRestaurantData(res.data);\n            setListName(Object.keys(res.data[0])[0]);\n        })\n        .catch((error) => { \n            setLoadFlag(false);\n            console.error(error);\n            }\n        )\n    }\n\n    const getCandidate = () => {\n        let candidateTemp = [];\n        if (restaurantData.length > 0) {\n            setListNameList(Object.keys(restaurantData[0]));\n        }\n        restaurantData.forEach(element => {\n            if (listName in element){\n                if (element[listName] !== '') candidateTemp.push(element[listName]);\n            }\n        });\n        setCandidateList(candidateTemp);\n        let repeats = Math.ceil(candidateTemp.length / defaultColorPalette.length);\n        setcolorPalette(repeatArray(defaultColorPalette, repeats));\n    }\n\n    const onFinished = (winner) => {\n        console.log(winner)\n      }\n\n    useEffect(() => {\n        getRestaurant();\n    }, []);\n\n    useEffect(() => {\n        setCandidateList([])\n        getCandidate();\n    }, [restaurantData, listName]);\n\n    \n\n    return (\n        (candidateList.length > 0) ?(\n        <div className='wheelwrapper'>\n            <BasicMenu restaurantListList={listNameList} setListName={setListName} currentListName={listName}/>\n            <WheelComponent\n                segments={candidateList}\n                segColors={colorPalette}\n                onFinished={(winner) => onFinished(winner)}\n                primaryColor='black'\n                contrastColor='white'\n                buttonText='Spin'\n                isOnlyOnce={false}\n                size={200}\n                upDuration={configData.UP_DURATION}\n                downDuration={configData.DOWN_DURATION}\n                fontFamily='Arial'\n            />\n        </ div>\n        ) : (loadFlag ? (<p>Loading ...</p>):(<p>Error!</p>))\n    );\n\n}\n\nexport default Wheel;","import './App.css';\nimport Wheel from './containers/main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>NTU Wheel of Dinner</h1>\n        <Wheel />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}